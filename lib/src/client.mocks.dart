// Mocks generated by Mockito 5.0.9 from annotations
// in lifx_http_api/src/client.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:lifx_http_api/src/bulb.dart' as _i4;
import 'package:lifx_http_api/src/client.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get apiKey =>
      (super.noSuchMethod(Invocation.getter(#apiKey), returnValue: '')
          as String);
  @override
  _i3.Future<List<_i4.Bulb>> listLights() =>
      (super.noSuchMethod(Invocation.method(#listLights, []),
              returnValue: Future<List<_i4.Bulb>>.value(<_i4.Bulb>[]))
          as _i3.Future<List<_i4.Bulb>>);
  @override
  _i3.Future<num> setState(String? uuid,
          {String? power,
          double? brightness,
          double? duration,
          double? infrared,
          bool? fast}) =>
      (super.noSuchMethod(
          Invocation.method(#setState, [
            uuid
          ], {
            #power: power,
            #brightness: brightness,
            #duration: duration,
            #infrared: infrared,
            #fast: fast
          }),
          returnValue: Future<num>.value(0)) as _i3.Future<num>);
}
